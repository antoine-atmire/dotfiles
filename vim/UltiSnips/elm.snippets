snippet starterBeginnerProgram "elm starter template" b
import Html as H exposing (Html, h1, button, div, text)
import Html.Events exposing (onClick)


main : Program Never Model Msg
main =
  H.beginnerProgram
    { model = model
    , view = view
    , update = update
    }



-- MODEL


type alias Model = Int

model : Model
model =
  0



-- UPDATE


type Msg = Increment | Decrement

update : Msg -> Model -> Model
update msg model =
  case msg of
    Increment ->
      model + 1

    Decrement ->
      model - 1



-- VIEW


view : Model -> Html Msg
view model =
  div []
    [ h1 [] [ text "heading 1" ]
    , button [ onClick Decrement ] [ text "-" ]
    , div [] [ text (toString model) ]
    , button [ onClick Increment ] [ text "+" ]
    ]
endsnippet

snippet -> "subcase" b
${1:value} ->
	${2:code}
endsnippet

snippet impex "import x as x exposing (x)" b
import ${1:package} exposing ($2)
endsnippet

snippet impax "import x as x exposing (x)" b
import ${1:package} as $2 exposing ($3)
endsnippet
